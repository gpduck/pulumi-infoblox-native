// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infoblox.Record
{
    [InfobloxResourceType("infoblox:record:a")]
    public partial class A : Pulumi.CustomResource
    {
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        [Output("ipv4addr")]
        public Output<string> Ipv4addr { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("ttl")]
        public Output<int?> Ttl { get; private set; } = null!;

        [Output("view")]
        public Output<string?> View { get; private set; } = null!;


        /// <summary>
        /// Create a A resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public A(string name, AArgs args, CustomResourceOptions? options = null)
            : base("infoblox:record:a", name, args ?? new AArgs(), MakeResourceOptions(options, ""))
        {
        }

        private A(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("infoblox:record:a", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing A resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static A Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new A(name, id, options);
        }
    }

    public sealed class AArgs : Pulumi.ResourceArgs
    {
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("ipv4addr", required: true)]
        public Input<string> Ipv4addr { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        [Input("view")]
        public Input<string>? View { get; set; }

        public AArgs()
        {
        }
    }
}
